<jittershader name="default">
	<description> Default Slab </description>
	<param name="tex0" type="int" default="0" />
	<param name="variance" type="float" default="0.1" />
	<language name="glsl" version="1.0">
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<bind param="max_iter" program="fp" />
		<bind param="variance" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord;
varying vec2 texdim0;
varying vec2 texdim1;
void main (void)
{
    gl_Position = ftransform();
    texcoord    = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	texdim1		= vec2(abs(gl_TextureMatrix[1][0][0]), abs(gl_TextureMatrix[1][1][1]));
	texdim0		= vec2(abs(gl_TextureMatrix[0][0][0]), abs(gl_TextureMatrix[0][1][1]));
}
]]>		
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord;
varying vec2 texdim0;
varying vec2 texdim1;
uniform sampler2DRect tex0;
uniform sampler2D tex1;
uniform float max_iter;
uniform float variance;

#define PI 3.14159

void main(void) 
{
	vec2 uv = texcoord.xy / texdim0.xy;
	
	float loop_size = (texdim1.x < max_iter) ? texdim1.x : max_iter;
	
	float sum = 0.0;
	
	
	vec4 phone_pos0 = texture2D(tex1, vec2(0.0, 0));
	float dist0 = length(uv.xy - phone_pos0.xy);
	float gauss0 = (1.0 / (pow(2.0 * PI * variance, 0.5))) * exp(-1.0 * (dist0 / (2.0 * variance)));
	sum = sum + (gauss0 * phone_pos0.z);//gauss * phone_pos.z;

	vec4 phone_pos1 = texture2D(tex1, vec2(0.3, 0));
	float dist1 = length(uv.xy - phone_pos1.xy);
	float gauss1 = (1.0 / (pow(2.0 * PI * variance, 0.5))) * exp(-1.0 * (dist1 / (2.0 * variance)));
	sum = sum + (gauss1 * phone_pos1.z);//gauss * phone_pos.z;
	
	vec4 phone_pos2 = texture2D(tex1, vec2(0.55, 0));
	float dist2 = length(uv.xy - phone_pos2.xy);
	float gauss2 = (1.0 / (pow(2.0 * PI * variance, 0.5))) * exp(-1.0 * (dist2 / (2.0 * variance)));
	sum = sum + (gauss2 * phone_pos2.z);//gauss * phone_pos.z;
	
	vec4 phone_pos3 = texture2D(tex1, vec2(0.75, 0));
	float dist3 = length(uv.xy - phone_pos3.xy);
	float gauss3 = (1.0 / (pow(2.0 * PI * variance, 0.5))) * exp(-1.0 * (dist3 / (2.0 * variance)));
	sum = sum + (gauss3 * phone_pos3.z);//gauss * phone_pos.z;
	
	vec4 phone_pos4 = texture2D(tex1, vec2(1.0, 0));
	float dist4 = length(uv.xy - phone_pos4.xy);
	float gauss4 = (1.0 / (pow(2.0 * PI * variance, 0.5))) * exp(-1.0 * (dist4 / (2.0 * variance)));
	sum = sum + (gauss4 * phone_pos4.z);//gauss * phone_pos.z;	
	
	float avg = sum / 5.0;
	
	avg = (avg <= 1.0) ? avg : 1.0;
	avg = (avg >= 0.0) ? avg : 0.0;
	
	gl_FragColor = vec4(avg);
}
]]>
		</program>
	</language>
</jittershader>
