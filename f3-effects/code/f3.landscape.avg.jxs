<jittershader name="default">
	<description> Default Slab </description>
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<param name="max_iter" type="float" default="3" />
	<param name="variance" type="float" default="0.1" />
	<language name="glsl" version="1.0">
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<bind param="max_iter" program="fp" />
		<bind param="variance" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord;
varying vec2 texdim0;
varying vec2 texdim1;
void main (void)
{
    gl_Position = ftransform();
    texcoord    = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	texdim1		= vec2(abs(gl_TextureMatrix[1][0][0]), abs(gl_TextureMatrix[1][1][1]));
	texdim0		= vec2(abs(gl_TextureMatrix[0][0][0]), abs(gl_TextureMatrix[0][1][1]));
}
]]>		
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord;
varying vec2 texdim0;
varying vec2 texdim1;
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform float max_iter;
uniform float variance;

#define PI 3.14159

void main(void) 
{
	vec2 uv = texcoord.xy / texdim0.xy;
	
	float loop_size = (texdim1.x < max_iter) ? texdim1.x : max_iter;
	
	float sum = 0.0;
	
	float i = 0.0;
	
	while(i < loop_size) {
		vec4 phone_pos = texture2DRect(tex1, vec2(i, 0));
		float dist = length(uv.xy - phone_pos.xy);
		float gauss = (1.0 / (pow(2.0 * PI * variance, 0.5))) * exp(-1.0 * (dist / (2.0 * variance)));
		sum = sum + (gauss * phone_pos.z);//gauss * phone_pos.z;
		i = i + 1.0;
	}
	
	float avg = sum / loop_size;
	
	avg = (avg <= 1.0) ? avg : 1.0;
	avg = (avg >= 0.0) ? avg : 0.0;
	
	gl_FragColor = vec4(avg);
}
]]>
		</program>
	</language>
</jittershader>
